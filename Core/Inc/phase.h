/*
 * phase.h
 *
 *  Created on: Jun 16, 2021
 *      Author: Tennyson Cheng
 */

#ifndef INC_PHASE_H_
#define INC_PHASE_H_

#include "stm32f1xx_hal.h"

#define SAMPLING_FREQ 44100
#define TABLE_SAMPLE_SIZE 256

static const uint16_t NOTE_FREQ_TABLE [128] = {
	16,    17,    18,    19,    21,    22,    23,    24,    26,    28,    29,    31,
	33,    35,    37,    39,    41,    44,    46,    49,    52,    55,    58,    62,
	65,    69,    73,    78,    82,    87,    92,    98,    104,   110,   117,   123,
	131,   139,   147,   156,   165,   175,   185,   196,   208,   220,   233,   247,
	262,   277,   294,   311,   330,   349,   370,   392,   415,   440,   466,   494,
	523,   554,   587,   622,   659,   698,   740,   784,   831,   880,   932,   988,
	1047,  1109,  1175,  1245,  1319,  1397,  1480,  1568,  1661,  1760,  1865,  1976,
	2093,  2217,  2349,  2489,  2637,  2794,  2960,  3136,  3322,  3520,  3729,  3951,
	4186,  4435,  4699,  4978,  5274,  5588,  5920,  6272,  6645,  7040,  7459,  7902,
	8372,  8870,  9397,  9956,  10548, 11175, 11840, 12544, 13290, 14080, 14917, 15804,
	16744, 17740, 18795, 19912, 21096, 22351, 23680, 25088,
};

static const int8_t SINE_TABLE [256] = {
	0,   3,   6,   9,   12,  16,  19,  22,  25,  28,  31,  34,  37,  40,  43,  46,
	49,  51,  54,  57,  60,  63,  65,  68,  71,  73,  76,  78,  81,  83,  85,  88,
	90,  92,  94,  96,  98,  100, 102, 104, 106, 107, 109, 111, 112, 113, 115, 116,
	117, 118, 120, 121, 122, 122, 123, 124, 125, 125, 126, 126, 126, 127, 127, 127,
	127, 127, 127, 127, 126, 126, 126, 125, 125, 124, 123, 122, 122, 121, 120, 118,
	117, 116, 115, 113, 112, 111, 109, 107, 106, 104, 102, 100, 98,  96,  94,  92,
	90,  88,  85,  83,  81,  78,  76,  73,  71,  68,  65,  63,  60,  57,  54,  51,
	49,  46,  43,  40,  37,  34,  31,  28,  25,  22,  19,  16,  12,  9,   6,   3,
	0,   -3,  -6,  -9,  -12, -16, -19, -22, -25, -28, -31, -34, -37, -40, -43, -46,
	-49, -51, -54, -57, -60, -63, -65, -68, -71, -73, -76, -78, -81, -83, -85, -88,
	-90, -92, -94, -96, -98, -100,-102,-104,-106,-107,-109,-111,-112,-113,-115,-116,
	-117,-118,-120,-121,-122,-122,-123,-124,-125,-125,-126,-126,-126,-127,-127,-127,
	-127,-127,-127,-127,-126,-126,-126,-125,-125,-124,-123,-122,-122,-121,-120,-118,
	-117,-116,-115,-113,-112,-111,-109,-107,-106,-104,-102,-100,-98, -96, -94, -92,
	-90, -88, -85, -83, -81, -78, -76, -73, -71, -68, -65, -63, -60, -57, -54, -51,
	-49, -46, -43, -40, -37, -34, -31, -28, -25, -22, -19, -16, -12, -9,  -6,  -3,
};

static const int8_t SINE_MOD_TABLE [256] = {
	0,   2,   3,   5,   7,   9,   10,  12,  14,  16,  17,  19,  21,  22,  24,  25,
	27,  29,  30,  32,  33,  35,  36,  38,  39,  41,  42,  44,  45,  46,  48,  49,
	50,  51,  52,  54,  55,  56,  57,  58,  59,  60,  61,  62,  62,  63,  64,  65,
	65,  66,  67,  67,  68,  68,  69,  69,  69,  70,  70,  70,  70,  71,  71,  71,
	71,  71,  71,  71,  70,  70,  70,  70,  69,  69,  69,  68,  68,  67,  67,  66,
	65,  65,  64,  63,  62,  62,  61,  60,  59,  58,  57,  56,  55,  54,  52,  51,
	50,  49,  48,  46,  45,  44,  42,  41,  39,  38,  36,  35,  33,  32,  30,  29,
	27,  25,  24,  22,  21,  19,  17,  16,  14,  12,  10,  9,   7,   5,   3,   2,
	0,   -2,  -3,  -5,  -7,  -9,  -10, -12, -14, -16, -17, -19, -21, -22, -24, -25,
	-27, -29, -30, -32, -33, -35, -36, -38, -39, -41, -42, -44, -45, -46, -48, -49,
	-50, -51, -52, -54, -55, -56, -57, -58, -59, -60, -61, -62, -62, -63, -64, -65,
	-65, -66, -67, -67, -68, -68, -69, -69, -69, -70, -70, -70, -70, -71, -71, -71,
	-71, -71, -71, -71, -70, -70, -70, -70, -69, -69, -69, -68, -68, -67, -67, -66,
	-65, -65, -64, -63, -62, -62, -61, -60, -59, -58, -57, -56, -55, -54, -52, -51,
	-50, -49, -48, -46, -45, -44, -42, -41, -39, -38, -36, -35, -33, -32, -30, -29,
	-27, -25, -24, -22, -21, -19, -17, -16, -14, -12, -10, -9,  -7,  -5,  -3,  -2,
};

uint16_t note_to_freq(uint8_t note_value);
uint16_t calculate_delta(uint16_t freq);
static inline uint16_t update_phase(uint16_t delta, uint16_t phase) { return delta + phase; };
static inline int8_t get_sample(uint8_t phase_integer) { return SINE_TABLE[phase_integer]; };
static inline int8_t get_mod_sample(uint8_t phase_integer) { return SINE_MOD_TABLE[phase_integer]; };

#endif /* INC_PHASE_H_ */
